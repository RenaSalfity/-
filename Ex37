import unit4.collectionsLib.Node;

/*
 *קאסם חליליה 207674227
 *רינה סלפיתי 209143098
*/
public class Ex37 {

	private static void printList(Node<Integer> h) {
		Node<Integer> tmp = null;
		for (tmp = h; tmp != null; tmp = tmp.getNext())
			System.out.print(tmp.getValue() + " ");
		System.out.println();

	}

	// add a num to a sorted node
	private static Node<Integer> addSorted(Node<Integer> h, int x) {
		Node<Integer> tmp = null;
		Node<Integer> p = new Node<Integer>(x);
		if (h != null) {
			if (h.getValue() < x) {
				for (tmp = h; tmp.getNext() != null && tmp.getNext().getValue() < x; tmp = tmp.getNext())
					;
				p.setNext(tmp.getNext());
				tmp.setNext(p);
			} else {
				p.setNext(h);
				h = p;
			}

		} else
			h = new Node<Integer>(x);
		return h;

	}

	public static void main(String[] args) {
		Node<Integer> head = null;
		head = new Node<Integer>(4, head);
		head = new Node<Integer>(3, head);
		head = new Node<Integer>(2, head);
		head = new Node<Integer>(1, head);
		Node<Integer> h = null;

		printList(head);
		System.out.println(addSorted(head, 5));
		System.out.println(addSorted(head, 0));
		System.out.println(addSorted(head, 8));
		head=addSorted(head,0);
		h = addSorted(h, 3);
		h = addSorted(h, 0);
		

		printList(h);
		printList(head);
	}

}
//O(n) ולכן סיבוכיות הזמן היא  𝑛 מספר הצעדים תלוי באורך הרשימה 
