/*
 * רינה סלפיתי 209143098
קאסם חליליה 207674227
 */

import unit4.collectionsLib.Node;
public class Ex29 {
// in : double node, out: returns the average of elements in node
//the complexity is O(n) if the number of elements is n
	public static double avgElementsInList(Node <Double> h) {
		double sum = 0;
		double count =0;
		Node<Double> temp = null;
		for(temp=h; temp!=null; temp=temp.getNext()) {
			sum +=temp.getValue();
			count++;
		}
		return sum/count;
	}
// in: double node, out: the function will count the elements that above and under the avg,  will return true if above == under
//the complexity is O(n+n) = O(2n) = O(n), in the line that calls the function avgElementsInList the complexity O(n), and for this function is also O(n)
	public static boolean countElementsByAvgInList(Node <Double> h) {
		double countAbove = 0;
		double countUnder=0;
		double avg = avgElementsInList(h);
		Node<Double> temp = null;
		for(temp=h; temp!=null; temp=temp.getNext()) {
			if(temp.getValue()<avg)
				countUnder++;
			if(temp.getValue()>avg)
				countAbove++;
		
		}
		return countAbove==countUnder;
	}
	
	public static void main(String[] args) {
		Node <Double> d = null;

		d= new Node<Double>(1.,d);
		d= new Node<Double>(1.d);
		d= new Node<Double>(1.,d);
		d= new Node<Double>(1.,d);
		d= new Node<Double>(1.,d);
		d= new Node<Double>(1.,d);
		d= new Node<Double>(1.,d);
		d= new Node<Double>(1.,d);
		d= new Node<Double>(3.,d);
		
		System.out.println("the average is: "+avgElementsInList(d));
		System.out.println("is under and above equals? "+ countElementsByAvgInList(d));
	}

}
