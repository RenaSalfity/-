
/*
רינה סלפיתי 209143098
קאסם חליליה 207674227
 */
import java.util.Stack;

public class Ex21 {

    public static void main(String[] args) {
        Stack<Double> stack = new Stack<>();

        stack.push(1.5);
        stack.push(1.6);
        stack.push(0.35);

        System.out.println("Original Stack: " + stack);
        sortStack(stack);
        System.out.println("Sorted Stack: " + stack);
    }

    // sort a stack
    public static void sortStack(Stack<Double> stack) {
        Stack<Double> sortedStack = new Stack<>();

        while (!stack.isEmpty()) {
            double max = biggestNum(stack);
            Stack<Double> tempStack = new Stack<>();

            while (!stack.isEmpty()) {
                double current = stack.pop();
                if (current != max) {
                    tempStack.push(current);
                }
            }

            while (!tempStack.isEmpty()) {
                stack.push(tempStack.pop());
            }

            sortedStack.push(max);
        }

        while (!sortedStack.isEmpty()) {
            stack.push(sortedStack.pop());
        }
    }

    // function that returns the max num in a stack
    public static double biggestNum(Stack<Double> numbers) {
        Stack<Double> tempStack = new Stack<>();
        double biggestNum = numbers.pop();
        tempStack.push(biggestNum);

        while (!numbers.isEmpty()) {
            double current = numbers.pop();
            tempStack.push(current);
            if (current > biggestNum) {
                biggestNum = current;
            }
        }

        while (!tempStack.isEmpty()) {
            numbers.push(tempStack.pop());
        }

        return biggestNum;
    }
}
//סיבוכיות של O(n)^2
