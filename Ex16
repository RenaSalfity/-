import java.util.Stack;
/*
רינה סלפיתי 209143098
קאסם חליליה 207674227
 */
public class Ex16 {
	 // Function to move the bottom element to the top
    public static Stack<Integer> moveBottomToTop(Stack<Integer> originalStack) {
    	int bottom;
        // temp stack to reverse the  elements of original
        Stack<Integer> tempStack = new Stack<>();
        while (!originalStack.isEmpty()) {
            tempStack.push(originalStack.pop());
        }

        //  Push the top element  back to the bottom
        bottom=tempStack.pop();

        //  Restore the elements from tempStack to originalStack
        while (!tempStack.isEmpty()) {
            originalStack.push(tempStack.pop());
        }
        originalStack.push(bottom);
        return originalStack;
    }
	public static void main(String[] args) {
		  Stack<Integer> st = new Stack<>();
	        st.push(1);
	        st.push(2);
	        st.push(3);
	        st.push(4);

	        System.out.println("Stack before moving top to bottom: " + st);
	        moveBottomToTop(st);
	        System.out.println(st);
	}

}
//O(n), its the number of iterates equals to the numbers of element in the stack
